pipeline {
  agent none
  options {
    disableConcurrentBuilds()
    buildDiscarder(logRotator(numToKeepStr: '8', daysToKeepStr: '20'))
    timeout(time: 1, unit: 'HOURS')
  }
  stages {
    stage('test') {
      parallel {
        stage('gcc5-python2') {
          agent {
            dockerfile {
              filename 'Dockerfile.gcc5-python2'
              dir 'jenkins'
            }
          }
          environment {
	    NETKET_CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=g++-5"
          }
          steps {
	    sh 'python ./setup.py build_ext --inplace'
	    sh '''python -c 'import netket; g = netket.graph.Hypercube(4, 1); h = netket.hilbert.Spin(g, 0.5); m = netket.machine.RbmSpin(h, 10)' '''
	    sh '''python -m pytest --verbose Test/'''
	    sh '''python -m pytest --verbose --doctest-glob='*.md' Docs/'''
          }
        }

        stage('clang6-python3') {
          agent {
            dockerfile {
              filename 'Dockerfile.clang6-python3'
              dir 'jenkins'
            }
          }
          environment {
	    NETKET_CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=clang++-6.0"
          }
          steps {
	    sh 'python3 ./setup.py build_ext --inplace'
	    sh '''python3 -c 'import netket; g = netket.graph.Hypercube(4, 1); h = netket.hilbert.Spin(g, 0.5); m = netket.machine.RbmSpin(h, 10)' '''
	    sh '''python3 -m pytest --verbose Test/'''
	    sh '''python3 -m pytest --verbose --doctest-glob='*.md' Docs/'''
          }
        }

        stage('gcc7-python3') {
          agent {
            dockerfile {
              filename 'Dockerfile.clang6-python3'
              dir 'jenkins'
            }
          }
          environment {
	    NETKET_CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=g++-7"
	  }
          steps {
	    sh 'python3 ./setup.py build_ext --inplace'
	    sh '''python3 -c 'import netket; g = netket.graph.Hypercube(4, 1); h = netket.hilbert.Spin(g, 0.5); m = netket.machine.RbmSpin(h, 10)' '''
	    sh '''python3 -m pytest --verbose Test/'''
	    sh '''python3 -m pytest --verbose --doctest-glob='*.md' Docs/'''
          }
        }

        stage('clang7-python3') {
          agent {
            dockerfile {
              filename 'Dockerfile.clang7-python3'
              dir 'jenkins'
            }
          }
          environment {
	    NETKET_CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=clang++-7 -DCMAKE_CXX_FLAGS=-std=c++17"
	  }
          steps {
	    sh 'python3 ./setup.py build_ext --inplace'
	    sh '''python3 -c 'import netket; g = netket.graph.Hypercube(4, 1); h = netket.hilbert.Spin(g, 0.5); m = netket.machine.RbmSpin(h, 10)' '''
	    sh '''python3 -m pytest --verbose Test/'''
	    sh '''python3 -m pytest --verbose --doctest-glob='*.md' Docs/'''
          }
        }

        stage('osx-clang-python2') {
          agent {
            label 'osx'
          }
          environment {
	    NETKET_CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=clang++"
	    VENV=pwd(tmp:true)
	    PATH="$VENV/bin:$BREW/bin:/usr/bin:/bin"
          }
          steps {
	    sh 'virtualenv $VENV'
	    sh 'pip install -r jenkins/requirements.txt'
	    sh 'python ./setup.py build_ext --inplace'
	    sh '''python -c 'import netket; g = netket.graph.Hypercube(4, 1); h = netket.hilbert.Spin(g, 0.5); m = netket.machine.RbmSpin(h, 10)' '''
	    sh '''python -m pytest --verbose Test/'''
	    sh '''python -m pytest --verbose --doctest-glob='*.md' Docs/'''
          }
        }

        stage('osx-clang-python3') {
          agent {
            label 'osx'
          }
          environment {
	    NETKET_CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=clang++"
	    VENV=pwd(tmp:true)
	    PATH="$VENV/bin:$BREW/bin:/usr/bin:/bin"
          }
          steps {
	    sh 'python3 -m venv $VENV'
	    sh 'pip3 install -r jenkins/requirements.txt'
	    sh 'python3 ./setup.py build_ext --inplace'
	    sh '''python3 -c 'import netket; g = netket.graph.Hypercube(4, 1); h = netket.hilbert.Spin(g, 0.5); m = netket.machine.RbmSpin(h, 10)' '''
	    sh '''python3 -m pytest --verbose Test/'''
	    sh '''python3 -m pytest --verbose --doctest-glob='*.md' Docs/'''
          }
        }
      }
    }
  }
}
